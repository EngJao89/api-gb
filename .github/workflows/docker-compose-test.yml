name: Docker Compose Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  docker-compose-test:
    name: Test with Docker Compose
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create .env file
      run: |
        echo "POSTGRES_USER=admin" >> .env
        echo "POSTGRES_PASSWORD=GoBarber123" >> .env
        echo "POSTGRES_DB=nest_db" >> .env
        echo "DATABASE_URL=postgresql://admin:GoBarber123@postgres:5432/nest_db?schema=public" >> .env
        echo "JWT_SECRET=test-jwt-secret" >> .env
        echo "JWT_EXPIRES_IN=7d" >> .env

    - name: Build and test with Docker Compose
      run: |
        echo "🐳 Starting Docker Compose test..."
        
        # Build and start services
        docker compose up --build -d
        
        # Wait for services to be ready with better health check
        echo "⏳ Waiting for services to be ready..."
        for i in {1..30}; do
          if docker compose ps | grep -q "nest_app.*Up"; then
            echo "✅ App container is running"
            break
          fi
          echo "⏳ Attempt $i/30 - waiting for app..."
          sleep 2
        done
        
        # Wait for database to be ready
        echo "⏳ Waiting for database to be ready..."
        for i in {1..15}; do
          if docker compose exec -T postgres pg_isready -U admin -d nest_db; then
            echo "✅ Database is ready"
            break
          fi
          echo "⏳ Attempt $i/15 - waiting for database..."
          sleep 2
        done
        
        # Test if the application is running
        echo "🧪 Testing application health..."
        for i in {1..10}; do
          if curl -f http://localhost:3333; then
            echo "✅ Application is responding"
            break
          fi
          echo "⏳ Attempt $i/10 - testing app health..."
          sleep 3
        done
        
        # Test database connection
        echo "🧪 Testing database connection..."
        docker compose exec -T app npx prisma db push --accept-data-loss
        
        # Run tests inside the container
        echo "🧪 Running tests..."
        docker compose exec -T app npm run test
        
        echo "✅ All tests passed!"
        
        # Cleanup
        echo "🧹 Cleaning up..."
        docker compose down -v

    - name: Upload logs on failure
      if: failure()
      run: |
        docker compose logs > docker-logs.txt
        echo "Docker logs saved to docker-logs.txt"
